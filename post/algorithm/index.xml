<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EricG&#39;s BLOG</title>
    <link>/post/algorithm/</link>
    <description>Recent content on EricG&#39;s BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sun, 16 Sep 2018 13:59:30 +0800</lastBuildDate>
    
	<atom:link href="/post/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Binary Search (二元搜尋法)</title>
      <link>/post/algorithm/binary-search/</link>
      <pubDate>Sun, 16 Sep 2018 13:59:30 +0800</pubDate>
      
      <guid>/post/algorithm/binary-search/</guid>
      <description>在上一篇 - Linear Search (線性搜尋法)，文末提到還有更好的搜尋方法，我們今天就來講講 Binary Search (二元搜尋法) 必要條件 首先，要進行 Binary Search 的集合必需要是排序過的</description>
    </item>
    
    <item>
      <title>Linear Search (線性搜尋法)</title>
      <link>/post/algorithm/linear-search/</link>
      <pubDate>Sat, 15 Sep 2018 16:53:45 +0800</pubDate>
      
      <guid>/post/algorithm/linear-search/</guid>
      <description>最基本的查詢方法 想像一下有一群人在排隊，你現在的任務是要去找到名字叫 &amp;ldquo;魏瓔珞&amp;rdquo; 的人在這排的第幾個，你要怎麼做呢？ 最簡</description>
    </item>
    
    <item>
      <title>Recursion 遞迴 (Golang)</title>
      <link>/post/algorithm/recursion/</link>
      <pubDate>Thu, 13 Sep 2018 09:50:15 +0800</pubDate>
      
      <guid>/post/algorithm/recursion/</guid>
      <description>今天來講講 Recursion 遞迴，以下範圍只會提到在電腦科學裡的遞迴，讓我們看下去 什麼是 Recursion 先來看看 Wiki 怎麼說 Recursion in computer science is a method of solving a problem where the solution depends on solutions to smaller instances of the same problem (as</description>
    </item>
    
  </channel>
</rss>